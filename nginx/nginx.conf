# Shared nginx configuration for both production and development.
# It expects SSL certificate and key mounted at:
#   /etc/nginx/devcle.crt
#   /etc/nginx/devcle.key

server {
  listen 80;
  listen 443 ssl http2;

  server_name devcle.test localhost _;

  # TLS certificates (mounted by docker-compose)
  ssl_certificate     /etc/nginx/devcle.crt;
  ssl_certificate_key /etc/nginx/devcle.key;

  # Basic hardening (minimal and safe defaults)
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  # Reverse proxy to the web application container.
  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://web:8080;
  }
}

# Development PostHog endpoint via subdomain ph.devcle.test.
# This proxies to PostHog running on the host machine at :8000.
server {
  listen 80;
  listen 443 ssl http2;

  server_name ph.devcle.test;

  # TLS certificates (same mounted files)
  ssl_certificate     /etc/nginx/devcle.crt;
  ssl_certificate_key /etc/nginx/devcle.key;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # Forward to PostHog running on the host at port 8000
    proxy_pass http://host.docker.internal:8000;
  }
}
