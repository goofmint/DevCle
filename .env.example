# Common environment variables (copy this to .env and fill in values)

# Application
# Example: use a long, random value (32+ bytes). Do not reuse in production.
# You can generate one with: `openssl rand -base64 48`
SESSION_SECRET=please-change-this-very-long-random-secret-base64

# Production: external services (override in dev with docker-compose.dev.yml)
# Examples below assume managed services; adjust hostnames, users, and passwords.
DATABASE_URL=postgres://app_user:strongpassword@db-prod.example.com:5432/devcle?sslmode=require
REDIS_URL=redis://:strongpassword@redis-prod.example.com:6379/0

# Optional analytics (Phase 4)
# Development (local PostHog behind nginx at ph.devcle.test):
POSTHOG_SITE_URL=https://ph.devcle.test
POSTHOG_API_KEY=phc_local_dev_key_here

# Production example (commented):
# POSTHOG_SITE_URL=https://app.posthog.com
# POSTHOG_API_KEY=phc_your_project_api_key_here

# Nginx certificate mounts for production (bind mounts)
# Set these to host file paths when running docker-compose in production.
# For example, with Let's Encrypt on the host:
#   fullchain (certificate): /etc/letsencrypt/live/devcle.example.com/fullchain.pem
#   private key:             /etc/letsencrypt/live/devcle.example.com/privkey.pem
NGINX_CONF_DIR=./nginx
NGINX_CERT_FILE=/etc/letsencrypt/live/devcle.example.com/fullchain.pem
NGINX_KEY_FILE=/etc/letsencrypt/live/devcle.example.com/privkey.pem
